/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <cstrike>
#include <fun>
#include <hamsandwich>

new time_s;
new g_MsgSync[1];
new g_cooldown;
new RoundCount;
new g_lastmode;
new g_round_assvssnip;
new Name[33];
new bool:gBotsRegistered;
native get_level(id);
native get_user_at4(id);

public plugin_init()
{
	register_plugin("Assassins VS Snipers", "1.0", "FoNiX.x.X Pr0");
	register_event("HLTV", "event_round_start", "a", "1=0", "2=0");
	register_event("SendAudio", "event_round_end", "a", "2=%!MRAD_terwin", "2=%!MRAD_ctwin", "2=%!MRAD_rounddraw");
	RegisterHam(Ham_Spawn, "player", "ham_PlayerSpawn_Post", 1);
	RegisterHam(Ham_Killed, "player", "ham_PlayerKilled", 0);
	RegisterHam(Ham_TakeDamage, "player", "ham_TakeDamage", 0);
	g_MsgSync[0] = CreateHudSyncObj(0);
	return 0;
}

public plugin_natives()
{
	register_native("AssassinVsnpiers", "native_AVS", 1);
	return 0;
}

public native_AVS()
{
	return g_round_assvssnip;
}

public client_putinserver(id)
{
	set_task(1.00, "ShowHUD", id + 2900, _, 0, "b", 0);
	return 0;
}	

public client_disconnect(id)
{
	remove_task(id + 2900, 0);
	return 0;
}

public ShowHUD(id)
{
	id += -2900;
	if (g_cooldown)
	{
		set_hudmessage(random_num(0,255), random_num(0,255), random_num(0,255), 0.65, 0.20, 0, 0.00, 1.10, 0.00, 0.00, -1);
		ShowSyncHudMsg(id, g_MsgSync[0], "Current Mod: Starting Mode %d^nHumans : %d | Furiens : %d", time_s, fnGetAlive( CS_TEAM_CT ), fnGetAlive( CS_TEAM_T ));
	}
	else
	{
		if (g_round_assvssnip)
		{
			set_hudmessage(255, 10, 255, 0.65, 0.20, 0, 0.00, 1.10, 0.00, 0.00, -1);
			ShowSyncHudMsg(id, g_MsgSync[0], "Current Mod: Assassin Vs Sniper^nSnipers : %d | Assassins : %d", fnGetAlive( CS_TEAM_CT ), fnGetAlive( CS_TEAM_T ));
		}
		else
		{
			set_hudmessage(0, 255, 0, 0.65, 0.20, 0, 0.00, 1.10, 0.00, 0.00, -1);
			ShowSyncHudMsg(id, g_MsgSync[0], "Current Mod: Normal (%d/%d)^nHumans : %d | Furiens : %d", RoundCount, 8, fnGetAlive( CS_TEAM_CT ), fnGetAlive( CS_TEAM_T ));
		}
	}
	return 0;
}

public event_round_start()
{
	if (g_lastmode == 1)
	{
		g_round_assvssnip = true;
	}
	else
	{
		g_round_assvssnip = false;
	}
	g_lastmode = false;
	g_cooldown = 1;
	set_task(0.20, "zombie_countdown", 0, _, 0, _, 0);
	time_s = 6;
	return 0;
}

public zombie_countdown()
{
	time_s += -1;
	if (0 >= time_s)
	{
		set_task(0.50, "Hud", 0, _, 0, _, 0);
		g_cooldown = 0;
	}
	else
	{
		if (time_s >= 1)
		{
		set_task(1.00, "zombie_countdown", 0, _, 0, _, 0);
		}
	}
	return 0;
}

public Hud()
{
	if (g_round_assvssnip)
	{
		set_hudmessage(255, 10, 255, -1.00, 0.17, 0, 0.00, 5.00, 1.00, 1.00, -1);
		show_hudmessage(0, "**--==== Assassins Vs Snipers ====--**");
		return 0;
	}
	return 0;
}

public event_round_end()
{
	if (!g_round_assvssnip)
	{
		RoundCount += 1;
	}
	if (RoundCount == 8)
	{
		Start_AvS();
		RoundCount = 0;
	}
	return 0;
}

public Start_AvS()
{
	g_lastmode = 1;
	return 0;
}

public fnGetAlive( CsTeams:csTeam ) // csTeam can be CS_TEAM_CT, CS_TEAM_T, CS_TEAM_UNASSIGNED, CS_TEAM_SPECTATOR
{
	new iMax = get_maxplayers( );
	new iCount = 0;

	for( new iClient = 1; iClient < iMax; iClient++ )
		if( is_user_alive( iClient ) )
		if( cs_get_user_team( iClient ) == csTeam )
			iCount++;

	return iCount;
}

public ham_PlayerSpawn_Post(id)
{
	if (g_round_assvssnip)
	{
		if (get_user_team(id) == 1)
		{
			give_item(id, "weapon_knife");
			set_user_health(id, 4000);
		}
		if (get_user_team(id) == 2)
		{
			set_user_health(id, 250);
			strip_user_weapons(id);
			give_item(id, "weapon_knife");
			give_item(id, "weapon_awp");
			cs_set_user_bpammo(id, CSW_AWP, 30);
		}
	}
	return 0;
}

public ham_PlayerKilled(victim, attacker, shouldgib)
{
	if (g_round_assvssnip && get_user_team(attacker) == 2 && get_user_weapon(attacker) == 18 && get_user_team(victim) == 1)
	{
		SetHamParamInteger(3, 2);
		static origin[3];
		get_user_origin(victim, origin, 0);
		message_begin(MSG_PVS, SVC_TEMPENTITY, origin, 0);
		write_byte(10);
		write_coord(origin[0]);
		write_coord(origin[1]);
		write_coord(origin[2] - 26);
		message_end();
	}
	return 0;
}

public ham_TakeDamage(victim, inflictor, attacker, Float:damage, damage_type)
{
	if (g_round_assvssnip && get_user_team(attacker) == 2 && get_user_weapon(attacker) == CSW_AWP && get_user_team(victim) == 1)
	{
		SetHamParamFloat(4, 15000.00);
	}
	return 0;
}

public client_authorized(id)
{
	if (!gBotsRegistered && is_user_bot(id))
	{
		set_task(0.10, "register_bots", id, "", 0, "", 0);
	}
	return 0;
}

public register_bots(id)
{
	if (!gBotsRegistered && is_user_connected(id))
	{
		RegisterHamFromEntity(Ham_Spawn, id, "ham_PlayerSpawn_Post", 1);
		RegisterHamFromEntity(Ham_Killed, id, "ham_PlayerKilled", 0);
		RegisterHamFromEntity(Ham_TakeDamage, id, "ham_TakeDamage", 0);
		gBotsRegistered = true;
	}
	return 0;
}  
